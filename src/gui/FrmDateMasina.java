/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Image;
import java.awt.event.ItemEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import models.Marca;
//import models.Model;
import models.Tir;

public class FrmDateMasina extends javax.swing.JDialog {

    /**
     * Creates new form FrmDateMasina
     */
    private ArrayList<ImageIcon> listaPoze;
    private int curImageIndex;
    private ArrayList<File> listaFisiere;
    private ArrayList<File> listaPozeDeAfisat;
    private Tir tirSelectat;
    private OnTirSaved onTirSaved;
    //private Model selectatiModelul;
    private Marca selectareMarca;
    
    
    private DefaultComboBoxModel modelMarci;
    private DefaultComboBoxModel modelModele;
///    private List<Model> modele;

    public FrmDateMasina(java.awt.Frame parent, boolean modal, Tir... tirSelectat) {
        super(parent, modal);
        this.listaPoze = new ArrayList<>();
        this.listaFisiere = new ArrayList<>();
        this.listaPozeDeAfisat = new ArrayList<>();
        this.curImageIndex = 0;
        initComponents();
        
        modelMarci = new DefaultComboBoxModel();
        modelModele = new DefaultComboBoxModel();
        List<Marca> marci = new ArrayList<Marca>();
        this.selectareMarca = new Marca(-1, "--Selectati marca--");
        marci.add(selectareMarca);
        Marca mercedes = new Marca(1, "Mercedes");
        marci.add(mercedes);
        Marca man = new Marca(2, "Man");
        marci.add(man);
        for (Marca m : marci) {
            modelMarci.addElement(m);
        }
//        this.selectatiModelul = new Model(-1, "--Selectati modelul--", null);
//        Model modelGLE = new Model(1, "GLE", mercedes);
//        Model modelCLS = new Model(2, "CLS", mercedes);
//        modele = new ArrayList<>();
//        modele.add(modelGLE);
//        modele.add(modelCLS);
//        Model man1 = new Model(1, "MAN The best", man);
//        Model man2 = new Model(2, "MAN The rest", man);
//        modele.add(man1);
//        modele.add(man2);
//        modelModele.addElement(selectatiModelul);
//        dropDownMarca.setModel(modelMarci);
//        dropDownModel.setModel(modelModele);

        //Editare
        if (tirSelectat.length > 0) {
            this.tirSelectat = tirSelectat[0];
            txtNrInmatriculare.setText(this.tirSelectat.getNrInmatriculare());
            dropDownMarca.setSelectedItem(this.tirSelectat.getMarca());
            dropDownModel.setSelectedItem(this.tirSelectat.getModel());
//            for(File f : this.tirSelectat.getPoze()) {
//                listaFisiere.add(f);
//            }
            for(File f : listaFisiere) {
                listaPoze.add(new ImageIcon(new ImageIcon(f.getAbsolutePath()).getImage().getScaledInstance(lblPoze.getWidth(), lblPoze.getHeight(), Image.SCALE_SMOOTH)));
            }
            this.curImageIndex = 0;
            lblPoze.setIcon(listaPoze.get(0));
            lblPoze.setText("");
            modificaCntPoze();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooserPozeMasina = new javax.swing.JFileChooser();
        panelPrincipal = new javax.swing.JPanel();
        lblMarca = new javax.swing.JLabel();
        lblModel = new javax.swing.JLabel();
        lblNrInmatriculare = new javax.swing.JLabel("<html>Numar<br />inmatriculare:</html>");
        btnSalveaza = new javax.swing.JButton();
        txtNrInmatriculare = new javax.swing.JTextField();
        lblPoze = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        lblCnt = new javax.swing.JLabel();
        btnAddPoza = new javax.swing.JButton();
        btnDeletePoza = new javax.swing.JButton();
        dropDownMarca = new javax.swing.JComboBox<>();
        dropDownModel = new javax.swing.JComboBox<>();

        fileChooserPozeMasina.setAcceptAllFileFilterUsed(false);
        fileChooserPozeMasina.setFileFilter(new FileNameExtensionFilter("Images", "jpg", "png", "gif", "bmp"));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Date masina");

        lblMarca.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblMarca.setText("Marca:");

        lblModel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblModel.setText("Model:");

        lblNrInmatriculare.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblNrInmatriculare.setLabelFor(txtNrInmatriculare);
        lblNrInmatriculare.setText("Nr. inmatriculare:");

        btnSalveaza.setText("Salveaza");
        btnSalveaza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalveazaActionPerformed(evt);
            }
        });

        txtNrInmatriculare.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNrInmatriculareKeyTyped(evt);
            }
        });

        lblPoze.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPoze.setText("<html>Poze <br> cu tiruri</html>");
        lblPoze.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        lblPoze.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblPoze.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblPoze.setRequestFocusEnabled(false);
        lblPoze.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPozeMouseClicked(evt);
            }
        });

        btnNext.setText(">");
        btnNext.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setText("<");
        btnPrevious.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        lblCnt.setText("0 / 0");

        btnAddPoza.setText("Adauga poza");
        btnAddPoza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPozaActionPerformed(evt);
            }
        });

        btnDeletePoza.setText("Sterge poza");
        btnDeletePoza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePozaActionPerformed(evt);
            }
        });

        dropDownMarca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dropDownMarcaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblModel)
                            .addComponent(lblMarca)
                            .addComponent(lblNrInmatriculare))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNrInmatriculare)
                            .addComponent(dropDownMarca, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dropDownModel, javax.swing.GroupLayout.Alignment.LEADING, 0, 240, Short.MAX_VALUE))
                        .addGap(0, 11, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDeletePoza, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddPoza))
                        .addGap(86, 86, 86)))
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblPoze, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalveaza)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelPrincipalLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCnt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMarca)
                            .addComponent(dropDownMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblModel)
                            .addComponent(dropDownModel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNrInmatriculare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNrInmatriculare))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddPoza)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeletePoza)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                        .addComponent(lblPoze, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCnt)
                    .addComponent(btnNext)
                    .addComponent(btnPrevious))
                .addGap(18, 18, 18)
                .addComponent(btnSalveaza)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public static void copyFile(File sourceFile, File destFile) throws IOException {
        if (!destFile.exists()) {
            destFile.createNewFile();
        }

        FileChannel source = null;
        FileChannel destination = null;

        try {
            source = new FileInputStream(sourceFile).getChannel();
            destination = new FileOutputStream(destFile).getChannel();
            destination.transferFrom(source, 0, source.size());
        } finally {
            if (source != null) {
                source.close();
            }
            if (destination != null) {
                destination.close();
            }
        }
    }

    private File makeFolderPoze() {
        File dirCur = new File(".");
        File folder = new File(dirCur, "poze");
        if (!folder.exists()) {
            folder.mkdir();
        }

        File tiruri = new File(folder, "Tiruri");
        if (!tiruri.exists()) {
            tiruri.mkdir();
        }

        return tiruri;
    }

    private void makeFile(File file, File dest) {
        UUID uuidPoza = UUID.randomUUID();
        String extension = file.getName().substring(file.getName().lastIndexOf("."));

        File poza = new File(dest, String.format("%s%s", uuidPoza.toString(), extension));
        listaPozeDeAfisat.add(poza);
        try {
            copyFile(file, poza);
        } catch (IOException ex) {
            Logger.getLogger(FrmDateMasina.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void modificaCntPoze() {
        lblCnt.setText(String.format("%s/%s", curImageIndex + 1, listaPoze.size()));
    }

    private void lblPozeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPozeMouseClicked
        // TODO add your handling code here:   
    }//GEN-LAST:event_lblPozeMouseClicked

    private void btnSalveazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalveazaActionPerformed
        // TODO add your handling code here:
        try {
            if (dropDownMarca.getSelectedItem().equals(this.selectareMarca)) {
                throw new Error("Va rog sa selectati o marca");
            }
//            if (dropDownModel.getSelectedItem().equals(this.selectatiModelul)) {
//                throw new Error("Va rog sa selectati un model");
//            }
            if (listaPoze.isEmpty()) {
                throw new Error("Va rog sa adaugati macar o poza");
            }
            if(txtNrInmatriculare.getText() == null) {
                throw new Error("Va rog sa introduceti numarul de inmatriculare");
            }
            
            File tiruri = makeFolderPoze();

            File pozeTir = new File(tiruri, txtNrInmatriculare.getText());
            if (!pozeTir.exists()) {
                pozeTir.mkdir();
            }

            for (File pozaDeSalvat : listaFisiere) {
                makeFile(pozaDeSalvat, pozeTir);
            }

            Tir tir = new Tir();
            tir.setId((int) (Math.random() * 10000));
            if (tirSelectat != null) {
                tir.setId(tirSelectat.getId());
            }
            tir.setMarca((Marca) dropDownMarca.getSelectedItem());
            //tir.setModel((Model) dropDownModel.getSelectedItem());
            tir.setNrInmatriculare(txtNrInmatriculare.getText());
            //tir.setPoze(listaPozeDeAfisat);
            //tir.setFolderPoze(pozeTir);

            if (onTirSaved != null) {
                onTirSaved.saveTir(tir);
            }

            this.dispose();
        } catch (Error err) {
            JOptionPane.showMessageDialog(this, err.getMessage());
        }
    }//GEN-LAST:event_btnSalveazaActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        // TODO add your handling code here:
        if (curImageIndex > 0 && curImageIndex < listaPoze.size()) {
            curImageIndex--;
            lblPoze.setIcon(listaPoze.get(curImageIndex));
            modificaCntPoze();
        }
        System.out.println(curImageIndex);
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        // TODO add your handling code here:
        if (curImageIndex >= 0 && curImageIndex < listaPoze.size() - 1) {
            curImageIndex++;
            lblPoze.setIcon(listaPoze.get(curImageIndex));
            modificaCntPoze();
        }
        System.out.println(curImageIndex);
    }//GEN-LAST:event_btnNextActionPerformed

    private void txtNrInmatriculareKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNrInmatriculareKeyTyped
        // TODO add your handling code here:
        if (Character.isLowerCase(evt.getKeyChar()) && Character.isLetter(evt.getKeyChar())) {
            evt.setKeyChar((char) (evt.getKeyChar() - 32));
        }
    }//GEN-LAST:event_txtNrInmatriculareKeyTyped

    private void btnAddPozaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPozaActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooserPozeMasina.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooserPozeMasina.getSelectedFile();
            listaFisiere.add(file);

            ImageIcon imageIcon = new ImageIcon(new ImageIcon(file.getAbsolutePath()).getImage().getScaledInstance(lblPoze.getWidth(), lblPoze.getHeight(), Image.SCALE_SMOOTH));

            lblPoze.setIcon(imageIcon);
            lblPoze.setText(null);
            listaPoze.add(imageIcon);
            curImageIndex = listaPoze.indexOf(imageIcon);
            modificaCntPoze();

        } else {
            System.out.println("File access cancelled by user");
        }
    }//GEN-LAST:event_btnAddPozaActionPerformed

    private void btnDeletePozaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePozaActionPerformed
        // TODO add your handling code here:
        try {
            if (listaPoze.isEmpty()) {
                throw new Error("Nu aveti poze adaugate");
            }
            if (listaPoze.size() == 1) {
                listaPoze.remove(0);
                lblPoze.setIcon(null);
                listaFisiere.remove(0);
                curImageIndex--;
                modificaCntPoze();
            }
            if (listaPoze.size() > 1) {
                listaPoze.remove(curImageIndex);
                listaFisiere.remove(curImageIndex);
                curImageIndex--;
                lblPoze.setIcon(listaPoze.get(curImageIndex));
                modificaCntPoze();
            }
        } catch (Error err) {
            System.err.println(err.getMessage());
        }
    }//GEN-LAST:event_btnDeletePozaActionPerformed

    private void dropDownMarcaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dropDownMarcaItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
//            Model selectatiModelul = (Model) modelModele.getElementAt(0);
//            modelModele.removeAllElements();
//            Marca marcaSelectata = (Marca) dropDownMarca.getSelectedItem();
//            modelModele.addElement(selectatiModelul);
//            for (Model m : modele) {
//                if (m.getMarca().equals(marcaSelectata)) {
//                    modelModele.addElement(m);
//                }
//            }
        }
    }//GEN-LAST:event_dropDownMarcaItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDateMasina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDateMasina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDateMasina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDateMasina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FrmDateMasina dialog = new FrmDateMasina(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public void setOnTirSaved(OnTirSaved onTirSaved) {
        this.onTirSaved = onTirSaved;
    }

    public interface OnTirSaved {
        void saveTir(Tir tir);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddPoza;
    private javax.swing.JButton btnDeletePoza;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSalveaza;
    private javax.swing.JComboBox<String> dropDownMarca;
    private javax.swing.JComboBox<String> dropDownModel;
    private javax.swing.JFileChooser fileChooserPozeMasina;
    private javax.swing.JLabel lblCnt;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblModel;
    private javax.swing.JLabel lblNrInmatriculare;
    private javax.swing.JLabel lblPoze;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTextField txtNrInmatriculare;
    // End of variables declaration//GEN-END:variables
}
